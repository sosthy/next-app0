{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sosthene\\\\Projets\\\\next-app0\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // This is the Link API\n\nimport Layout from '../components/layout/MyLayout';\n/*\r\nconst PostLink = props => (\r\n    <li>\r\n      <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\r\n        <a>{props.title}</a>\r\n      </Link>\r\n    </li>\r\n);\r\n\r\nfunction Blog() {\r\n    return (\r\n        <Layout>\r\n            <h1>My Blog</h1>\r\n            <ul>\r\n                <PostLink title=\"Hello Next.js\" id=\"hello-nextjs\" />\r\n                <PostLink title=\"Learn Next.js is awesome\" id=\"learn-nextjs\" />\r\n                <PostLink title=\"Deploy apps with Zeit\" id=\"deploy-nextjs\" />\r\n            </ul>\r\n        </Layout>\r\n    );\r\n} \r\n*/\n\nfunction Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, show.name)));\n  })));\n}\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["C:/Users/Sosthene/Projets/next-app0/pages/index.js"],"names":["React","Link","fetch","Layout","Index","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADJ,CADA,CADiB;AAAA,GAApB,CADL,CAFJ,CADJ;AAcH;;AAEDN,KAAK,CAACO,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFT,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdU,UAAAA,GADc;AAAA;AAAA,iBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAIpBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJoB,2CAMb;AACHX,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAW,KAAK;AAAA,qBAAIA,KAAK,CAACV,IAAV;AAAA,aAAd;AADJ,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeJ,KAAf","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n// This is the Link API\r\nimport Layout from '../components/layout/MyLayout';\r\n\r\n/*\r\nconst PostLink = props => (\r\n    <li>\r\n      <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\r\n        <a>{props.title}</a>\r\n      </Link>\r\n    </li>\r\n);\r\n\r\nfunction Blog() {\r\n    return (\r\n        <Layout>\r\n            <h1>My Blog</h1>\r\n            <ul>\r\n                <PostLink title=\"Hello Next.js\" id=\"hello-nextjs\" />\r\n                <PostLink title=\"Learn Next.js is awesome\" id=\"learn-nextjs\" />\r\n                <PostLink title=\"Deploy apps with Zeit\" id=\"deploy-nextjs\" />\r\n            </ul>\r\n        </Layout>\r\n    );\r\n} \r\n*/\r\n\r\nfunction Index(props) {\r\n    return (\r\n        <Layout>\r\n            <h1>Batman TV Shows</h1>\r\n            <ul>\r\n                {props.shows.map(show => (\r\n                    <li key={show.id}>\r\n                    <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n                        <a>{show.name}</a>\r\n                    </Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n      </Layout>\r\n    );\r\n}\r\n\r\nIndex.getInitialProps = async function() {\r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n    const data = await res.json();\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n  \r\n    return {\r\n        shows: data.map(entry => entry.show)\r\n    };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}